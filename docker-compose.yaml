version: "3.8"

services:
  account:
    build:
      context: .
      dockerfile: ./account/app.dockerfile
    depends_on:
      - account_db
    environment:
      DATABASE_URL: postgres://akhil:123456@account_db/akhil?sslmode=disable
    networks:
      - backend
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U akhil -d akhil -h account_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  catalog:
    build:
      context: .
      dockerfile: ./catalog/app.dockerfile
    depends_on:
      - catalog_db
    environment:
      DATABASE_URL: http://catalog_db:9200
    networks:
      - backend
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://catalog_db:9200 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  order:
    build:
      context: .
      dockerfile: ./order/app.dockerfile
    depends_on:
      - order_db
    environment:
      DATABASE_URL: postgres://akhil:123456@order_db/akhil?sslmode=disable
      ACCOUNT_SERVICE_URL: http://account:8080
      CATALOG_SERVICE_URL: http://catalog:8080
    networks:
      - backend
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U akhil -d akhil -h order_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  graphql:
    build:
      context: .
      dockerfile: ./graphql/app.dockerfile
    ports:
      - "8000:8080"
    depends_on:
      - account
      - catalog
      - order
    environment:
      ACCOUNT_SERVICE_URL: http://account:8080
      CATALOG_SERVICE_URL: http://catalog:8080
      ORDER_SERVICE_URL: http://order:8080
      OTEL_EXPORTER_OTLP_ENDPOINT: ""
    networks:
      - backend
    restart: "no"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  account_db:
    image: postgres:14
    environment:
      POSTGRES_DB: akhil
      POSTGRES_USER: akhil
      POSTGRES_PASSWORD: 123456  # Hardcoded password
    ports:
      - "5434:5432"
    networks:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U akhil -d akhil"]
      interval: 10s
      timeout: 5s
      retries: 5

  catalog_db:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.4
    environment:
      ES_JAVA_OPTS: -Xms1g -Xmx1g
      discovery.type: single-node
    ports:
      - "9200:9200"
    networks:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
  order_db:
    image: postgres:14
    environment:
      POSTGRES_DB: akhil
      POSTGRES_USER: akhil
      POSTGRES_PASSWORD: 123456  # Hardcoded password
    ports:
      - "5433:5432"
    networks:
      - backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U akhil -d akhil"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  backend:
    driver: bridge
